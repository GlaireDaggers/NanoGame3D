mod window;

use window::Window;

pub struct TestUi {
    rot,
    test_font,
    test_texture,
    win,
}

impl TestUi {
    pub fn new() {
        let font = Font::load("content/fonts/Roboto-Regular.ttf");
        let tex = Texture::load("content/textures/effects/glow.basis");

        TestUi {
            rot: 0.0,
            test_font: font,
            test_texture: tex,
            win: Window::new()
                .with_anchors(Vector2::new(0.5, 0.0), Vector2::new(0.5, 0.0))
                .with_pos_delta(Vector2::new(-64.0, 0.0))
                .with_size_delta(Vector2::new(128.0, 64.0))
                .with_paint_fn(|painter, screen_pos, screen_size| {
                    painter.draw_sprite(tex,
                        screen_pos.copy(),
                        Some(screen_size.copy()),
                        Vector2::zero(),
                        0.0,
                        None,
                        Color32::new(255, 255, 255, 255));

                    painter.draw_text_layout(font,
                        "Hello, world!",
                        16.0,                               // font size
                        screen_pos.copy(),                  // position
                        screen_size.copy(),                 // size
                        Vector2::zero(),                    // pivot
                        0.0,                                // rotation
                        HAlign::Middle,
                        VAlign::Middle,
                        TextWrap::Word,
                        Color32::new(255, 32, 32, 255));
                })
        }
    }

    pub fn update(self, dt) {
        self.rot += dt * 45.0;
    }

    pub fn paint(self, screen_width, screen_height, painter) {
        self.win.paint(screen_width, screen_height, painter);
    }
}