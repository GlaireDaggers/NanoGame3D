vs = '''
attribute vec4 in_position;
attribute vec4 in_normal;
attribute vec4 in_tangent;
attribute vec2 in_texcoord0;
attribute vec2 in_texcoord1;
attribute vec4 in_color;
attribute vec2 in_joints;
attribute vec2 in_weights;

varying vec4 vtx_normal;
varying vec4 vtx_tangent;
varying vec2 vtx_texcoord0;
varying vec2 vtx_texcoord1;
varying vec4 vtx_color;

uniform mat4 localToWorld;
uniform mat4 mvp;

void main() {
	gl_Position = mvp * vec4(in_position.xyz, 1.0);
    vtx_normal = localToWorld * vec4(in_normal.xyz, 0.0);
    vtx_tangent = localToWorld * vec4(in_tangent.xyz, 0.0);
    vtx_texcoord0 = in_texcoord0;
    vtx_texcoord1 = in_texcoord1;
    vtx_color = in_color;
}
'''

ps = '''
varying vec4 vtx_normal;
varying vec4 vtx_tangent;
varying vec2 vtx_texcoord0;
varying vec2 vtx_texcoord1;
varying vec4 vtx_color;

uniform vec4 shR;
uniform vec4 shG;
uniform vec4 shB;

uniform sampler2D mainTexture;

vec3 ShadeSH(vec4 worldNormal) {
    float r = dot(worldNormal, shR);
    float g = dot(worldNormal, shG);
    float b = dot(worldNormal, shB);
    return vec3(r, g, b);
}

void main() {
    vec4 wn = vec4(normalize(vtx_normal.xyz), 1.0);
    vec3 light = ShadeSH(wn);
    vec3 diffuse = texture2D(mainTexture, vtx_texcoord0).rgb;
    gl_FragColor = vec4(light * diffuse * 2.0, 1.0);
}
'''
